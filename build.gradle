plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.2'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter' // âœ… Needed for SpringApplication
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	implementation 'org.springframework:spring-tx'
	implementation 'org.json:json:20210307'
	implementation 'com.razorpay:razorpay-java:1.4.4'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'com.microsoft.sqlserver:mssql-jdbc:11.2.0.jre8'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf' // If you're using Thymeleaf for the view
	implementation 'org.springframework.boot:spring-boot-starter-validation' // If you're using validation
	 // use your version
	implementation 'org.springframework.boot:spring-boot-starter-security'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.1'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.1'
	implementation 'io.jsonwebtoken:jjwt-api:0.11.1'
	implementation 'org.springframework.security:spring-security-crypto'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'com.google.firebase:firebase-admin:9.5.0'

	// Lombok (for @Slf4j and others)
	compileOnly 'org.projectlombok:lombok:1.18.34'
	annotationProcessor 'org.projectlombok:lombok:1.18.34'
	testCompileOnly 'org.projectlombok:lombok:1.18.34'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'

	// Tests
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

}


tasks.named('test') {
	useJUnitPlatform()
}
springBoot {
	mainClass = 'com.example.VTM.VtmApplication'
}

tasks.named('bootJar') {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}